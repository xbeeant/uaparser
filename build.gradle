import java.text.SimpleDateFormat

buildscript {
    repositories {
        maven {
            url "https://maven.aliyun.com/repository/public"
        }
        maven {
            url "https://maven.aliyun.com/repository/jcenter"
        }
        maven {
            url "https://maven.aliyun.com/repository/spring"
        }
        maven {
            url "https://maven.aliyun.com/repository/spring-plugin"
        }
        maven {
            url "https://maven.aliyun.com/repository/gradle-plugin"
        }
        maven {
            url "https://maven.aliyun.com/repository/google"
        }
        maven {
            url "https://maven.aliyun.com/repository/grails-core"
        }
        maven {
            url "https://maven.aliyun.com/repository/apache-snapshots"
        }
        mavenCentral()
        mavenLocal()
    }
}

plugins {
    id "org.sonarqube" version "2.8"
}
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'

repositories {
    maven {
        url "https://maven.aliyun.com/repository/public"
    }
    maven {
        url "https://maven.aliyun.com/repository/jcenter"
    }
    maven {
        url "https://maven.aliyun.com/repository/spring"
    }
    maven {
        url "https://maven.aliyun.com/repository/spring-plugin"
    }
    maven {
        url "https://maven.aliyun.com/repository/gradle-plugin"
    }
    maven {
        url "https://maven.aliyun.com/repository/google"
    }
    maven {
        url "https://maven.aliyun.com/repository/grails-core"
    }
    maven {
        url "https://maven.aliyun.com/repository/apache-snapshots"
    }
    mavenCentral()
    mavenLocal()
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
    }
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// 打包源码
task sourceJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

// 打包javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourceJar
}


group = 'com.xstudio'
version="${version}"


publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/xbeeant/xstudio")
            credentials {
                username = "huangxb0512@gmail.com"
                password = System.getenv("token")
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
            pom {
                    description = "user-agent parser"
                url = "https://maven.pkg.github.com/xbeeant/xstudio"
                licenses {
                    license {
                        name = "MIT License"
                        url = "https://mit-license.org/"
                    }
                }
                developers {
                    developer {
                        id = "beeant0512"
                        name = "Xiaobiao Huang"
                        email = "huangxb0512@gmail.com"
                    }
                }
                scm {
                    connection = "https://github.com/xbeeant/xstudio"
                    developerConnection = "https://github.com/xbeeant/xstudio"
                    url = "https://github.com/xbeeant/xstudio/packages"
                }
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
    group = "Xstudio Test Reporting"
    description = "Generate by Jacoco coverage reports."
}

check.dependsOn jacocoTestCoverageVerification
test.finalizedBy jacocoTestReport

def date = new Date()
def sdf = new SimpleDateFormat("yyyy-MM")
def d = sdf.format(date)

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property 'sonar.projectName', 'useragent'
        property 'sonar.projectKey', "${project.name}"
        property 'sonar.binaries' , "./build/classes/java/main/com/xstudio"
        property 'sonar.java.binaries' , "./build/classes/java/main/com/xstudio"
        property 'sonar.java.source' , "1.8"
        property 'sonar.tests', './src/test/java'
        property 'sonar.language' , "java"
        property 'sonar.java.coveragePlugin' , "jacoco"
        property 'sonar.projectVersion' , "${d}"
        property 'sonar.login' , "${sonar.login}"
        property "sonar.host.url", "${sonar.host.url}"
    }
}

dependencies {
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.5.2'

    compile group: 'org.yaml', name: 'snakeyaml', version: '1.25'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'

    testCompile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'
    testCompile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.7'
    testCompile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.7'
    testCompile group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: '2.7'

    testCompile("org.slf4j:jul-to-slf4j:1.7.26")

    testCompile("org.springframework:spring-core:5.1.9.RELEASE")
}